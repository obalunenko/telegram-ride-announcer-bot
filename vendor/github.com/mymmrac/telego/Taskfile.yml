version: "3"

silent: true

tasks:
  default:
    desc: "Show available tasks"
    cmds:
      - task --list-all

  pre-commit:
    desc: "Run tests, linter and build examples"
    cmds:
      - go mod tidy
      - task: generate
      - task: lint
      - task: test
      - task: build:examples

  lint:
    desc: "Run golangci-lint"
    deps: [ install:lint ]
    cmds:
      - golangci-lint run

  lint:list:
    desc: "Run golangci-lint linters (print enabled & disabled linters)"
    deps: [ install:lint ]
    cmds:
      - golangci-lint linters

  test:
    desc: "Run tests"
    cmds:
      - mkdir -p bin
      - |
        go test -coverprofile bin/cover.out \
          $(go list ./... | grep -v /examples/ | grep -v /internal/ | grep -v /mock)
    sources:
      - ./**/*.go
      - go.mod
      - go.sum
    generates:
      - bin/cover.out

  test:cover:
    desc: "Run tests & show coverage"
    deps:
      - test
    cmds:
      - go tool cover -func bin/cover.out

  test:race:
    desc: "Run tests with race flag"
    cmds:
      - go test -race -count=1 ./...

  test:bench:
    desc: "Run benchmarks"
    cmds:
      - go test -bench=. -benchtime=10s -benchmem

  build:examples:
    desc: "Build examples"
    cmds:
      - go build -o bin/ ./examples/*

  generate:
    desc: "Generate (used for mock generation)"
    deps: [ install:mock ]
    cmds:
      - go generate ./...

  generator:
    desc: "Run specific generation"
    cmds:
      - go run ./internal/generator {{.CLI_ARGS}}

  generator:all:
    desc: "Run all generators"
    cmds:
      - task: generator
        vars:
          CLI_ARGS: types types-tests types-setters types-setters-tests methods methods-tests methods-setters methods-setters-tests

  generator:clean-up:
    desc: "Remove generated files"
    cmds:
      - rm *.generated

  install:lint:
    desc: "Install golangci-lint"
    cmds:
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
    status:
      - command -v golangci-lint

  install:mock:
    desc: "Install mockgen"
    cmds:
      - go install github.com/golang/mock/mockgen@latest
    status:
      - command -v mockgen
